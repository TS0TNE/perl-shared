Index: perl-shared/lib/perfSONAR_PS/NPToolkit/Services/MySQL.pm
===================================================================
--- perl-shared.orig/lib/perfSONAR_PS/NPToolkit/Services/MySQL.pm	2017-10-18 15:00:52.000000000 +0000
+++ perl-shared/lib/perfSONAR_PS/NPToolkit/Services/MySQL.pm	2017-11-01 18:24:11.000000000 +0000
@@ -9,8 +9,8 @@
     my ( $self, %conf ) = @_;
 
     $conf{description}  = "MySQL Daemon" unless $conf{description};
-    $conf{init_script} = "mysqld" unless $conf{init_script};
-    $conf{process_names} = [ "mysql" ] unless $conf{process_names};
+    $conf{init_script} = "mysql" unless $conf{init_script};
+    $conf{process_names} = [ "mysqld" ] unless $conf{process_names};
     $conf{pid_files} = [ "/var/run/mysqld/mysqld.pid" ] unless $conf{pid_files};
     $conf{regular_restart} = 1;
     $conf{package_names} = [ "mysql-server" ] unless $conf{package_names};
Index: perl-shared/lib/perfSONAR_PS/NPToolkit/Services/httpd.pm
===================================================================
--- perl-shared.orig/lib/perfSONAR_PS/NPToolkit/Services/httpd.pm	2017-10-18 15:00:52.000000000 +0000
+++ perl-shared/lib/perfSONAR_PS/NPToolkit/Services/httpd.pm	2017-11-01 18:24:11.000000000 +0000
@@ -11,10 +11,10 @@
     my ( $self, %conf ) = @_;
 
     $conf{description}  = "Apache HTTP Server" unless $conf{description};
-    $conf{init_script} = "httpd" unless $conf{init_script};
-    $conf{process_names} = "httpd" unless $conf{process_names};
-    $conf{pid_files} = "/var/run/httpd/httpd.pid" unless $conf{pid_files};
-    $conf{package_names} = [ "httpd" ] unless $conf{package_names};
+    $conf{init_script} = "apache2" unless $conf{init_script};
+    $conf{process_names} = "apache2" unless $conf{process_names};
+    $conf{pid_files} = "/run/apache2/apache2.pid" unless $conf{pid_files};
+    $conf{package_names} = [ "apache2" ] unless $conf{package_names};
 
     $self->SUPER::init( %conf );
 
Index: perl-shared/lib/perfSONAR_PS/NPToolkit/Services/Cassandra.pm
===================================================================
--- perl-shared.orig/lib/perfSONAR_PS/NPToolkit/Services/Cassandra.pm	2017-10-18 15:00:52.000000000 +0000
+++ perl-shared/lib/perfSONAR_PS/NPToolkit/Services/Cassandra.pm	2017-11-01 18:24:11.000000000 +0000
@@ -15,7 +15,7 @@
     #Cassandra does not properly create /var/run/cassandra directory on boot, only creates
     #  on install which then gets removed on reboot. Removing this for now.
     #$conf{pid_files} = "/var/run/cassandra/cassandra.pid" unless $conf{pid_files};
-    $conf{package_names} = [ "cassandra20" ] unless $conf{package_names};
+    $conf{package_names} = [ "cassandra" ] unless $conf{package_names};
 
     $self->SUPER::init( %conf );
 
Index: perl-shared/lib/perfSONAR_PS/NPToolkit/Services/Base.pm
===================================================================
--- perl-shared.orig/lib/perfSONAR_PS/NPToolkit/Services/Base.pm	2017-11-01 18:24:11.000000000 +0000
+++ perl-shared/lib/perfSONAR_PS/NPToolkit/Services/Base.pm	2017-11-01 18:24:11.000000000 +0000
@@ -8,6 +8,7 @@
 use fields 'LOGGER', 'INIT_SCRIPT', 'PID_FILES', 'PROCESS_NAMES', 'DESCRIPTION', 'CAN_DISABLE', 'REGULAR_RESTART', 'PACKAGE_NAMES';
 use Dpkg::Control;
 use Dpkg::Version;
+use File::Basename;
 
 sub new {
     my ( $package ) = @_;
@@ -150,7 +151,7 @@
     open(STDERR, ">", File::Spec->devnull());
     open(STDOUT, ">", File::Spec->devnull());
 
-    my $ret = system( "/usr/bin/systemctl", @param );
+    my $ret = system( "/bin/systemctl", @param );
 
     # restore stderr + stdout
     open(STDERR, ">&", $stderr);
@@ -169,7 +170,7 @@
 
     # Use systemd if available
     return $self->run_systemctl( 'is-enabled' => $self->{INIT_SCRIPT} )
-        if -x '/usr/bin/systemctl';
+        if -x '/bin/systemctl';
 
     # Check if the service is "on" in this run level.
     my $curr_runlevel;
@@ -188,13 +189,21 @@
     open(my $stderr, ">&STDERR");
     open(STDERR, ">", File::Spec->devnull());
 
-    my $chkconfig_output = `/sbin/chkconfig --list $self->{INIT_SCRIPT}`;    
+    my $insserv_output = `/sbin/insserv -s`;
 
     # restore stderr
     open(STDERR, ">&", $stderr);
 
-    foreach my $line (split('\n', $chkconfig_output)) {
-        $disabled = 0 if ($line =~ /$curr_runlevel:on/);
+    my $service = basename($self->{INIT_SCRIPT});
+    foreach my $line (split('\n', $insserv_output)) {
+        my @status = split(':', $line);
+
+        if ($status[0] eq 'S' &&
+            $status[3] eq $service &&
+            $status[2] =~ m/$curr_runlevel/)
+        {
+            $disabled = 0;
+        }
     }
 
     return $disabled;
@@ -210,7 +219,7 @@
 
     # Use systemd if available
     return $self->run_systemctl( 'enable' => $self->{INIT_SCRIPT} )
-        if -x '/usr/bin/systemctl';
+        if -x '/bin/systemctl';
 
     # turn off stderr + stdout
     open(my $stderr, ">&STDERR");
@@ -218,9 +227,9 @@
     open(STDERR, ">", File::Spec->devnull());
     open(STDOUT, ">", File::Spec->devnull());
 
-    system( "/sbin/chkconfig --del  " . $self->{INIT_SCRIPT} );
+    system("/usr/sbin/update-rc.d", basename($self->{INIT_SCRIPT}), "disable");
 
-    my $ret = system( "/sbin/chkconfig --add  " . $self->{INIT_SCRIPT} );
+    my $ret = system("/usr/sbin/update-rc.d", basename($self->{INIT_SCRIPT}), "enable");
 
     # restore stderr + stdout
     open(STDERR, ">&", $stderr);
@@ -239,7 +248,7 @@
 
     # Use systemd if available
     return $self->run_systemctl( 'disable' => $self->{INIT_SCRIPT} )
-        if -x '/usr/bin/systemctl';
+        if -x '/bin/systemctl';
 
     # turn off stderr + stdout
     open(my $stderr, ">&STDERR");
@@ -247,7 +256,7 @@
     open(STDERR, ">", File::Spec->devnull());
     open(STDOUT, ">", File::Spec->devnull());
 
-    my $ret = system( "/sbin/chkconfig --del " . $self->{INIT_SCRIPT});
+    my $ret = system("/usr/sbin/update-rc.d", basename($self->{INIT_SCRIPT}), "disable");
 
     # restore stderr + stdout
     open(STDERR, ">&", $stderr);
@@ -266,7 +275,7 @@
 
     # Use systemd if available
     return $self->run_systemctl( $cmd => $self->{INIT_SCRIPT} )
-        if -x '/usr/bin/systemctl';
+        if -x '/bin/systemctl';
 
     # turn off stderr + stdout
     open(my $stderr, ">&STDERR");
@@ -274,7 +283,7 @@
     open(STDERR, ">", File::Spec->devnull());
     open(STDOUT, ">", File::Spec->devnull());
 
-    my $shell_cmd = "/sbin/service " . $self->{INIT_SCRIPT} . " " . $cmd;
+    my $shell_cmd = "/usr/sbin/service " . $self->{INIT_SCRIPT} . " " . $cmd;
 
     $self->{LOGGER}->debug($shell_cmd);
 
Index: perl-shared/lib/perfSONAR_PS/Utils/Host.pm
===================================================================
--- perl-shared.orig/lib/perfSONAR_PS/Utils/Host.pm	2017-10-18 15:00:52.000000000 +0000
+++ perl-shared/lib/perfSONAR_PS/Utils/Host.pm	2017-11-01 18:24:11.000000000 +0000
@@ -503,7 +503,7 @@
 sub get_ntp_info {
     my $ntp;
 
-    my $ntp_result = `/usr/sbin/ntpq -p`;
+    my $ntp_result = `/usr/bin/ntpq -p`;
 
     my @ntp_response = split /\n/, $ntp_result;
     
@@ -735,6 +735,7 @@
     my $result;
 
     my $is_el7 = 0;
+    my $is_debian = 0;
 
     if (    (   $os_info->{'distribution_name'}     =~ /^CentOS/
                 || $os_info->{'distribution_name'}  =~ /^Red Hat/
@@ -742,10 +743,19 @@
             )
             && $os_info->{'distribution_version'} =~ /^7\.\d/ ) {
                 $is_el7 = 1;
+    } elsif ($os_info->{'distribution_name'} =~ /^Debian/
+            || $os_info->{'distribution_name'}  =~ /^Ubuntu/ ) {
+            $is_debian = 1;
     }
     if ( $is_el7 ) {
         $result = `/bin/systemctl is-enabled yum-cron`;
 
+    } elsif ( $is_debian ) {
+        if (-e '/etc/apt/apt.conf.d/60unattended-upgrades-perfsonar') {
+            $result = "enabled";
+        } else {
+            $result = "disabled";
+        }
     } else {
         $result = `/etc/init.d/yum-cron status`;
     }
@@ -816,7 +826,7 @@
 sub _call_sysctl {
     my ($var_name) = @_;
 
-    my $result = `sysctl $var_name`;
+    my $result = `/sbin/sysctl $var_name`;
     if($?){
         return;
     }
Index: perl-shared/lib/perfSONAR_PS/NPToolkit/Services/YumCron.pm
===================================================================
--- perl-shared.orig/lib/perfSONAR_PS/NPToolkit/Services/YumCron.pm	2017-10-18 15:00:52.000000000 +0000
+++ perl-shared/lib/perfSONAR_PS/NPToolkit/Services/YumCron.pm	2017-11-01 18:24:11.000000000 +0000
@@ -8,40 +8,38 @@
 sub init {
     my ( $self, %conf ) = @_;
 
-    $conf{description}  = "Yum Automatic Updates" unless $conf{description};
-    $conf{init_script} = "yum-cron" unless $conf{init_script};
-    $conf{process_names} = "yum" unless $conf{process_names};
-    $conf{pid_files} = "/var/lock/yum-cron.lock/pidfile" unless $conf{pid_files};
-    $conf{package_names} = [ "yum-cron" ] unless $conf{package_names};
+    $conf{description}  = "APT Automatic Updates" unless $conf{description};
+    $conf{package_names} = [ "unattended-upgrades" ] unless $conf{package_names};
 
     $self->SUPER::init( %conf );
 
     return 0;
 }
 
+sub disable_startup {
+    my ($self) = @_;
+
+    unlink '/etc/apt/apt.conf.d/60unattended-upgrades-perfsonar';
+}
+
 sub enable_startup {
     my ($self) = @_;
 
-    unless ($self->{INIT_SCRIPT}) {
-	$self->{LOGGER}->error("No init script specified for this service");
-	return -1;
+    my $action_file = '/etc/apt/apt.conf.d/60unattended-upgrades-perfsonar';
+    my $action_fd;
+    unless (open($action_fd, '>', $action_file)) {
+        $self->{LOGGER}->error("Could not opet $action_file: $!");
+        return -1;
     }
 
-    # turn off stderr + stdout
-    open(my $stderr, ">&STDERR");
-    open(my $stdout, ">&STDOUT");
-    open(STDERR, ">", File::Spec->devnull());
-    open(STDOUT, ">", File::Spec->devnull());
-
-    my $ret = system( "chkconfig --add  " . $self->{INIT_SCRIPT} );
-    #need to run chkconfig on
-    $ret = system( "chkconfig " . $self->{INIT_SCRIPT} . " on");
-    
-    # restore stderr + stdout
-    open(STDERR, ">&", $stderr);
-    open(STDOUT, ">&", $stdout);
-
-    return $ret;
+    print $action_fd "APT::Periodic::Update-Package-Lists \"1\";\n";
+    print $action_fd "APT::Periodic::Unattended-Upgrade \"1\";\n";
+    print $action_fd "Unattended-Upgrade::Origins-Pattern:: \"origin=perfSONAR\";\n";
+
+    unless(close($action_fd)) {
+        $self->{LOGGER}->error("Could not close $action_file: $!");
+        return -1;
+    }
 }
 
 1;
Index: perl-shared/lib/perfSONAR_PS/NPToolkit/Services/NetworkBase.pm
===================================================================
--- perl-shared.orig/lib/perfSONAR_PS/NPToolkit/Services/NetworkBase.pm	2017-10-18 15:00:52.000000000 +0000
+++ perl-shared/lib/perfSONAR_PS/NPToolkit/Services/NetworkBase.pm	2017-11-01 18:24:11.000000000 +0000
@@ -81,7 +81,7 @@
     open(STDERR, ">", File::Spec->devnull());
     open(STDOUT, ">", File::Spec->devnull());
 
-    my $shell_cmd = "/sbin/service configure_nic_parameters start";
+    my $shell_cmd = "/usr/sbin/service configure_nic_parameters start";
 
     $self->{LOGGER}->debug($shell_cmd);
 
Index: perl-shared/lib/perfSONAR_PS/NPToolkit/Services/NTP.pm
===================================================================
--- perl-shared.orig/lib/perfSONAR_PS/NPToolkit/Services/NTP.pm	2017-10-18 15:00:52.000000000 +0000
+++ perl-shared/lib/perfSONAR_PS/NPToolkit/Services/NTP.pm	2017-11-01 18:24:11.000000000 +0000
@@ -9,7 +9,7 @@
 sub init {
     my ( $self, %conf ) = @_;
 
-    $conf{init_script} = "ntpd" unless $conf{init_script};
+    $conf{init_script} = "ntp" unless $conf{init_script};
     $conf{description}  = "NTP" unless $conf{description};
     $conf{process_names} = "ntpd" unless $conf{process_names};
     $conf{pid_files} = "/var/run/ntpd.pid" unless $conf{pid_files};
